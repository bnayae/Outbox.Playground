version: "3.8"
name: outbox

services:

 
  aspire-dashboard:
    # https://learn.microsoft.com/en-us/dotnet/aspire/fundamentals/dashboard/configuration
    image: harbor-docker.payoneer.com/whitelist/mcr.microsoft.com/dotnet/aspire-dashboard:9.3
    container_name: outbox-aspire-dashboard
    ports:
      - 18888:18888
      - 18889:18889
      # - 4317:18889
    environment:
      - DASHBOARD__TELEMETRYLIMITS__MAXLOGCOUNT=1000
      - DASHBOARD__TELEMETRYLIMITS__MAXTRACECOUNT=1000
      - DASHBOARD__TELEMETRYLIMITS__MAXMETRICCOUNT=1000
      - DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS=true
    restart: unless-stopped
    
  # MSSQL
    # MSSQL
  mssql:
    image: harbor-docker.payoneer.com/whitelist/mcr.microsoft.com/mssql/server:2022-latest
    container_name: outbox_mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=MasadNetunim12!@
    ports:
      - "1433:1433"
    volumes:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    command: >
        bash -c '
        /opt/mssql/bin/sqlservr &
        echo "Waiting for SQL Server to start...";
        sleep 30;
        echo "Running initialization script...";
        /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "MasadNetunim12!@" -C -i /docker-entrypoint-initdb.d/init-db.sql;
        echo "Database initialization completed!";
        wait
        '

  # Kafka Broker
  broker:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-server:7.8.0
    hostname: broker
    container_name: outbox_broker
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:28081
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: outbox_schema-registry
    depends_on:
      - broker
    ports:
      - "28081:28081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:28081

  connect:
    image: harbor-docker.payoneer.com/whitelist/cnfldemos/cp-server-connect-datagen:0.6.4-7.6.0
    hostname: connect
    container_name: outbox_connect
    depends_on:
      - broker
      - schema-registry
      - mssql
    ports:
      - "8083:8083"
    volumes:
      - ./confluentinc-kafka-connect-jdbc-10.8.4.zip:/tmp/kafka-connect-jdbc.zip
      - connect-plugins:/usr/share/confluent-hub-components      
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:28081
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.8.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    command: >
      bash -c "
        echo 'Checking if JDBC connector is already installed...'
        if [ ! -d /usr/share/confluent-hub-components/confluentinc-kafka-connect-jdbc ]; then
          echo 'Installing JDBC connector from zip file...'
          cd /usr/share/confluent-hub-components/
          jar xf /tmp/kafka-connect-jdbc.zip
          echo 'JDBC connector installed successfully!'
        else
          echo 'JDBC connector already installed, skipping...'
        fi
        echo 'Starting Kafka Connect...'
        /etc/confluent/docker/run
      "

  control-center:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-enterprise-control-center:7.8.0
    hostname: control-center
    container_name: outbox_control-center
    depends_on:
      - broker
      - schema-registry
      - connect
      - ksqldb-server
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: '/connectors'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:28081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  ksqldb-server:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-ksqldb-server:7.8.0
    hostname: ksqldb-server
    container_name: outbox_ksqldb-server
    depends_on:
      - broker
      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:28081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

  
  preparation:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-server:7.8.0
    hostname: preparation
    container_name: outbox_prepairation
    depends_on:
      - broker
      - control-center
    command: >
      sh -c '
      if kafka-topics --describe --topic payoneer_sre --bootstrap-server broker:29092; then
        echo "Topic '\''payoneer_sre'\'' already exists."
      else
        kafka-topics --create --topic payoneer_sre --bootstrap-server broker:29092 --partitions 1 --replication-factor 1 --config cleanup.policy=compact
        echo "Topic '\''payoneer_sre'\'' created."
      fi

      echo "isActiveSite=true" | kafka-console-producer --broker-list broker:29092 --topic payoneer_sre --property "parse.key=true" --property "key.separator=="
      echo "Record published to topic '\''payoneer_sre'\''."
      '

 
  connector-setup:
    image: harbor-docker.payoneer.com/whitelist/confluentinc/cp-server:7.8.0
    hostname: connector-setup
    container_name: outbox_connector-setup
    depends_on:
      - connect
      - mssql
    volumes:
      - ./connector_mssql-jdbc-source-connector_outbox_config.json:/tmp/connector_config.json:ro
    command: >
      bash -c '
      echo "Waiting for Kafka Connect to be ready...";
      while ! curl -s -f http://connect:8083/connectors > /dev/null; do
        echo "Connect not ready yet, waiting...";
        sleep 5;
      done;
      echo "Kafka Connect is ready!";
      
      echo "Creating MSSQL JDBC Source Connector...";
      curl -s -X POST http://connect:8083/connectors \
        -H "Content-Type: application/json" \
        -d @/tmp/connector_config.json;
      
      echo "";
      echo "Connector created successfully!";
      echo "Checking connector status...";
      sleep 5;
      curl -s http://connect:8083/connectors/mssql-jdbc-source-connector_outbox/status;
      echo "";
      '
 

volumes:
  connect-plugins:
    driver: local

networks:
  default:
    name: kafka_network